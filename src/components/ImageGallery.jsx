import { useState, useMemo } from 'react';
import Lightbox from "yet-another-react-lightbox";
import Fullscreen from "yet-another-react-lightbox/plugins/fullscreen";
import Zoom from "yet-another-react-lightbox/plugins/zoom";
import "yet-another-react-lightbox/styles.css";

// Import the manifest file generated by our Node.js script.
import manifest from '../galleryManifest.json';

export default function ImageGallery({ path }) {
  const [isOpen, setIsOpen] = useState(false);
  const [currentIndex, setCurrentIndex] = useState(0);

  const galleryImages = useMemo(() => {
    const imageFiles = manifest[path];

    if (!imageFiles || imageFiles.length === 0) {
      return [];
    }

    return imageFiles.map(filename => {
      let nickname;
      const firstUnderscoreIndex = filename.indexOf('_');
      const dotIndex = filename.lastIndexOf('.');

      if (firstUnderscoreIndex !== -1) {
        nickname = filename.substring(0, firstUnderscoreIndex);
      } else {
        nickname = filename.substring(0, dotIndex);
      }
      
      const url = `/news/images/${path}/${filename}`;

      return {
        src: url,
        mc: nickname,
        name: nickname
      };
    });
  }, [path]);

  if (galleryImages.length === 0) {
    console.warn(`ImageGallery: No images found for path: "${path}" in manifest.`);
    return <p className="text-gray-400">Галерею не знайдено або в ній немає зображень.</p>;
  }
  
  const openLightbox = (index) => {
    setCurrentIndex(index);
    setIsOpen(true);
  };

  return (
    <div className="my-6">
      {/* --- АДАПТИВНА СІТКА --- */}
      {/* grid-cols-2: дві колонки на найменших екранах (за замовчуванням) */}
      {/* sm:grid-cols-3: три колонки на екранах від 640px і ширше */}
      {/* lg:grid-cols-4: чотири колонки на екранах від 1024px і ширше */}
      <div className="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-4">
        {galleryImages.map((img, index) => (
          <div
            key={index}
            // --- АДАПТИВНА ВИСОТА ---
            // aspect-square робить блок квадратним, а h-40 видалено
            className="group relative cursor-pointer overflow-hidden cornerCutSmall aspect-square"
            onClick={() => openLightbox(index)}
          >
            <img
              src={img.src}
              alt={`Гравець ${img.name}`}
              className="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
              style={{ imageRendering: 'pixelated' }}
              loading="lazy"
            />

            <div
              className="absolute bottom-0 left-0 right-0 p-2 flex items-center gap-2 bg-gradient-to-t from-black/70 to-transparent minecraftFont"
            >
              <img
                src={`https://nmsr.nickac.dev/face/${img.mc}`}
                alt={img.name}
                className="w-5 h-5 object-cover flex-shrink-0"
                style={{ imageRendering: 'pixelated' }}
                onError={(e) => { e.target.style.display = 'none'; }}
              />
              <span className="text-sm font-medium text-white drop-shadow-md truncate">
                {img.name}
              </span>
            </div>
          </div>
        ))}
      </div>

      <Lightbox
        open={isOpen}
        close={() => setIsOpen(false)}
        slides={galleryImages.map(img => ({ src: img.src }))}
        index={currentIndex}
        plugins={[Fullscreen, Zoom]}
        zoom={{
          maxZoomPixelRatio: 10,
          zoomInMultiplier: 2,
          doubleTapDelay: 300,
          doubleClickDelay: 300,
          doubleClickMaxStops: 2,
          keyboardMoveDistance: 50,
          wheelZoomDistanceFactor: 100,
          pinchZoomDistanceFactor: 100,
          scrollToZoom: true,
        }}
        styles={{ 
          container: { 
            backgroundColor: "rgba(32, 44, 40, 0.98)",
            height: "100vh",
            width: "100vw"
          },
          slide: {
            display: "flex",
            alignItems: "center",
            justifyContent: "center"
          },
          slideContainer: {
            height: "100%",
            width: "100%"
          },
          image: {
            imageRendering: "pixelated",
            maxHeight: "100vh",
            maxWidth: "100vw",
            objectFit: "contain"
          }
        }}
        carousel={{
          finite: false,
          preload: 2,
          imageFit: "contain",
          imageProps: {
            style: {
              imageRendering: "pixelated",
            }
          }
        }}
      />

      {/* Global CSS override for Minecraft-themed lightbox */}
      <style jsx global>{`
        /* Pixelated images */
        .yarl__slide img,
        .yarl__slide_image,
        .yarl__slide_zoomed img {
          image-rendering: pixelated !important;
          image-rendering: -moz-crisp-edges !important;
          image-rendering: crisp-edges !important;
        }
        
        /* Main container background */
        .yarl__container {
          height: 100vh !important;
          width: 100vw !important;
          background: linear-gradient(135deg, rgba(32, 44, 40, 0.98) 0%, rgba(69, 33, 54, 0.95) 100%) !important;
        }

        /* Minecraft-style Buttons with 3D Bevel */
        .yarl__button {
          background: linear-gradient(180deg, #c5629a 0%, #a34e7e 100%) !important;
          border: none !important;
          border-radius: 0 !important;
          color: #e5e7eb !important;
          transition: all 0.1s ease !important;
          min-width: 44px !important;
          min-height: 44px !important;
          padding: 10px !important;
          image-rendering: pixelated !important;

        }

        /* Hover state: "pop out" effect */
        .yarl__button:hover {
          background: linear-gradient(180deg, #f390d0 0%, #c5629a 100%) !important;
        }

        /* Active state: "pushed in" effect */
        .yarl__button:active {
          background: linear-gradient(180deg, #a34e7e 0%, #823e65 100%) !important;
        }

        /* Navigation buttons (larger) */
        .yarl__navigation_prev,
        .yarl__navigation_next {
        margin: 0 10px !important;
          padding: 20px !important;
          background: linear-gradient(180deg, #c5629a 0%, #a34e7e 100%) !important;
        }

        .yarl__navigation_prev .yarl__button,
        .yarl__navigation_next .yarl__button {
          width: 56px !important;
          height: 56px !important;
        }

        /* Toolbar with Minecraft style */
        .yarl__toolbar {
          padding: 12px !important;
          gap: 8px !important;
        }

        /* Slide counter with Minecraft UI style */
        .yarl__slide_counter {
          background: #202c28 !important;
          color: #e5e7eb !important;
          font-family: 'Minecraft', monospace !important; /* Use Minecraft font */
          font-weight: bold !important;
          padding: 8px 16px !important;
          border-radius: 0 !important;
        }

        /* Main frame border */
        .yarl__portal::after {
          content: '';
          position: fixed;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
          pointer-events: none;
          z-index: 9999;
          image-rendering: pixelated;
        }

        /* Loading spinner color */
        .yarl__loading {
          color: #c5629a !important;
        }

        /* Icon styling */
        .yarl__icon {
          color: #e5e7eb !important;
          image-rendering: pixelated !important;
          filter: drop-shadow(2px 2px 0px rgba(0, 0, 0, 0.3)) !important;
        }
      `}</style>
    </div>
  );
}